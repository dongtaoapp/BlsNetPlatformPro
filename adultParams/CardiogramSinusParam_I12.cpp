#include <boost/lexical_cast.hpp>
#include <boost/format.hpp>
#include <boost/assert.hpp>
#include ".\CardiogramSinusParam_I12.h"

namespace jysoft { namespace simulator { namespace ecg {

	CCardiogramSinusParam_I12::CCardiogramSinusParam_I12()
							: CVirCardiogramParam()
	{
	}

	CCardiogramSinusParam_I12::CCardiogramSinusParam_I12( IStorage *pRootStorage )
						: CVirCardiogramParam()
	{
		m_pStorages  = pRootStorage;
	}

	CCardiogramSinusParam_I12::~CCardiogramSinusParam_I12(void)
	{
	}

	//加载参数值
    void CCardiogramSinusParam_I12::LoadCardiogramParam(QRS eQRS, BasicRhythm eRhythm, int uHR, short sConduct /*=0*/, short sExtendParam/*=0*/)
	{
		if( uHR < 20 )
			uHR = 20;
		if( uHR > 260 )
			uHR = 260;
		//-----------------------------------------------------------------------------
		std::string pAimPtr[11];
		if( uHR <= 130 )
		{
			GetNormalSinusParams(pAimPtr, uHR);
		}
		else
		{
			GetFastSinusParams(pAimPtr, uHR);
		}
		//设置刷新数据的范围
		if(m_eQRS == QRS_None)
		{
			m_setParams.clear();//移除所有的参数
			m_eRefurbishDataRange = RD_LoadConfigFile;
			m_setParams["ConfigFileName"] = "MakeFile.txt";
		}
		else if(m_eQRS != eQRS)
		{
			m_eRefurbishDataRange = RD_AllData;
		}
		else if(m_uHR != uHR)
		{
			m_eRefurbishDataRange = RD_OpSegmentData;
		}
		SetP_FileName(pAimPtr);
		SetP_ZoomTime(pAimPtr);
		SetP_ExtendTime(pAimPtr);
		SetR_FileName(pAimPtr);
		SetR_ZoomTime(pAimPtr);
		SetR_ExtendTime(pAimPtr);
		SetT_FileName(pAimPtr);
		SetT_ZoomTime(pAimPtr);
		SetT_ExtendTime(pAimPtr);
		Set_CycleTime(pAimPtr);
		Set_HeartRate(pAimPtr);

		m_eQRS = eQRS;
		m_eRhythm = eRhythm;
		m_uHR     = uHR;
		//end hjg 2006/3/29
	}

    void CCardiogramSinusParam_I12::GetNormalSinusParams(/*out*/std::string *pParams, int uHR)
	{
		//各数值的含义：p段文件名；缩放时间；水平间隔延伸时间；R段文件名；缩放时间；水平间隔延伸时间；T段文件名；缩放时间；水平间隔延伸时间；周期时间;心率
		static std::string strNormalParams[][11] = {
			//A Sinus
            {"P.txt","1200","300","A_R.txt","1000","900","A_T.txt","2200","24400","30000","20"},//20HR
            {"P.txt","1200","300","A_R.txt","1000","900","A_T.txt","2200","14400","20000","30"},//30HR
            {"P.txt","1200","300","A_R.txt","1000","900","A_T.txt","2200","9400","15000","40"}, //40HR
            {"P.txt","1200","300","A_R.txt","1000","900","A_T.txt","2200","6400","12000","50"}, //50HR
            {"P.txt","1200","300","A_R.txt","1000","900","A_T.txt","2200","4400","10000","60"}, //60HR
            {"P.txt","1200","300","A_R.txt","1000","900","A_T.txt","2200","3000","8600","70"}, //70HR
            {"P.txt","1200","300","A_R.txt","1000","900","A_T.txt","2200","1900","7500","80"}, //80HR
            {"P.txt","1200","300","A_R.txt","1000","900","A_T.txt","2200","1000","6600","90"}, //90HR
            {"P.txt","1200","300","A_R.txt","1000","900","A_T.txt","2200","400","6000","100"},  //100HR
            {"P.txt","1200","300","A_R.txt","1050","825","A_T.txt","2250","300","5700","105"},    //105HR
            {"P.txt","1200","300","A_R.txt","1050","825","A_T.txt","2250","0","5625","110"},    //110HR
            {"P.txt","1200","300","A_R.txt","1000","650","A_T.txt","2000","200","5375","115"},  //115HR
            {"P.txt","1200","300","A_R.txt","925","350","A_T.txt","1850","425","5050","120"},   //120HR
            {"P.txt","1200","250","A_R.txt","925","350","A_T.txt","1800","300","4825","125"},   //125HR
            {"P.txt","1200","100","A_R.txt","925","350","A_T.txt","1775","250","4600","130"}    //130HR
		};
		int  iHRStep  = uHR/10 - 2;
		if( uHR > 100 )
		{
			iHRStep = ((uHR / 5) * 5 - 100)/5 + 8;
		}
		for( int n = 0; n < 11; ++n )
		{
			pParams[n] = strNormalParams[iHRStep][n];
		}
		if( (uHR <= 100 &&(uHR % 10) != 0) || (uHR > 100 && (uHR % 5) != 0) )
		{
			int nCycleTime = ((600000 / uHR) / 50) * 50;  //时间单位为0.1毫秒；周期时间为50的倍数
			int nExtendTime = boost::lexical_cast<int>( pParams[8] );
			nExtendTime    = nExtendTime - ( boost::lexical_cast<int>( pParams[9] ) - nCycleTime);
			pParams[8] = boost::lexical_cast<std::string>(nExtendTime);
			pParams[9] = boost::lexical_cast<std::string>(nCycleTime);
			pParams[10] = boost::lexical_cast<std::string>(uHR);
		}
	}

    void CCardiogramSinusParam_I12::GetFastSinusParams(/*out*/std::string *pParams, int uHR)
	{
		//各数值的含义：p段文件名；缩放时间；水平间隔延伸时间；R段文件名；缩放时间；水平间隔延伸时间；T段文件名；缩放时间；水平间隔延伸时间；周期时间;心率
		static std::string strFastParams[][11] = {
			//A Sinus
            {"P.txt","1200","100","A_R.txt","925","350","A_T.txt","1775","250","4600","130"},   //130HR
            {"P.txt","1200","75","A_R.txt","925","350","A_T.txt","1700","200","4450","135"},   //135HR
            {"P.txt","1150","75","A_R.txt","925","350","A_T.txt","1650","125","4275","140"},    //140HR
            {"P.txt","1150","75","A_R.txt","925","350","A_T.txt","1650","125","4150","145"},    //145HR
            {"P.txt","1150","75","A_R.txt","925","350","A_T.txt","1650","125","4000","150"},    //150HR
            {"P.txt","1150","75","A_R.txt","925","350","A_T.txt","1650","125","3900","155"},    //155HR
            {"P.txt","1050","75","A_R.txt","850","150","A_T.txt","1500","125","3750","160"},    //160HR
            {"P.txt","1050","75","A_R.txt","850","150","A_T.txt","1500","0","3600","165"},    //165HR
            {"P.txt","1100","75","A_R.txt","800","200","A_T.txt","1750","0","3500","170"},    //170HR
            {"P.txt","1100","75","A_R.txt","800","200","A_T.txt","1750","0","3425","175"},    //175HR
            {"P.txt","1100","75","A_R.txt","800","200","A_T.txt","1750","0","3295","180"},      //180HR
            {"P.txt","1100","25","A_R.txt","800","200","A_T.txt","1750","0","3225","185"},      //185HR
            {"P.txt","1100","0","A_R.txt","850","200","A_T.txt","1800","0","3150","190"},      //190HR
            {"P.txt","1100","0","A_R.txt","900","200","A_T.txt","1900","0","3075","195"},      //195HR
            {"P.txt","1100","0","A_R.txt","900","200","A_T.txt","1900","0","3000","200"},        //200HR
            {"P.txt","1000","0","A_R.txt","850","150","A_T.txt","1900","0","2850","210"},        //210HR
            {"P.txt","1000","0","A_R.txt","850","150","A_T.txt","1800","0","2700","220"},        //220HR
            {"P.txt","1000","0","A_R.txt","850","150","A_T.txt","1750","0","2600","230"},        //230HR
            {"P.txt","1000","0","A_R.txt","850","150","A_T.txt","1650","0","2500","240"},        //240HR
            {"P.txt","1000","0","A_R.txt","850","150","A_T.txt","1500","0","2400","250"},        //250HR
            {"P.txt","1000","0","A_R.txt","850","150","A_T.txt","1500","0","2300","260"}         //260HR
		};
		if( uHR <= 200 )
		{
			int  iHRStep  = ((uHR / 5) * 5 - 130)/5;
			for( int n = 0; n < 11; ++n )
			{
				pParams[n] = strFastParams[iHRStep][n];
			}
			if( (uHR <= 200 && (uHR % 5) != 0) )
			{
				int nCycleTime = ((600000 / uHR) / 50) * 50;     //时间单位为0.1毫秒；周期时间为50的倍数
				int nExtendTime = boost::lexical_cast<int>( pParams[8] );
				nExtendTime    = nExtendTime - ( boost::lexical_cast<int>( pParams[9] ) - nCycleTime);
				if( nExtendTime < 0 )
				{
					nExtendTime = 0;
				}
				pParams[8] = boost::lexical_cast<std::string>( nExtendTime );
				pParams[9] = boost::lexical_cast<std::string>(nCycleTime);
				pParams[10] = boost::lexical_cast<std::string>(uHR);
			}
		}
		else
		{
			int iHRStep = ((uHR / 10) * 10 - 200)/10 + 14;
			for( int n = 0; n < 11; ++n )
			{
				pParams[n] = strFastParams[iHRStep][n];
			}
			pParams[10] = boost::lexical_cast<std::string>(uHR);
		}
	}

	void CCardiogramSinusParam_I12::LoadExtrasystParamPre(Extrasys eExtrasyst)
	{
		switch(eExtrasyst)
		{
		case PAC:
			{
				m_eRefurbishDataRange = RD_AllData;//重新加载所有的数据
				m_setParams["T_ExtendTime"] = "0";//T段延伸值
				break;
			}
		case PJC:
			{
				m_eRefurbishDataRange = RD_AllData;//重新加载所有的数据
				m_setParams["T_ExtendTime"] = "0";
				break;
			}
		}
	}

	//获取UnifocalPVC早搏段参数
    void CCardiogramSinusParam_I12::GetUnifocalPVC_Params(/*out*/std::string *pParams, int uHR)
	{
		//各数值的含义：早波段时间；向左延伸时间；向左延伸值；向右延伸时间；向右延伸值；周期时间
		static std::string strUnifocalPVC_Params[][6] = {
            {"4800","11400","0","13800","0","30000"},//20
            {"4800","11400","0","3800","0","20000"}, //30
            {"4700","7900","0","2400","0","15000"}, //40
            {"4550","7500","0","0","0","12000"}, //50
            {"4800","7150","0","8050","0","20000"}, //60
            {"4500","6500","0","6200","0","17200"}, //70
            {"4500","5900","0","4600","0","15000"}, //80
            {"4500","5700","0","3000","0","13200"}, //90
            {"4500","5600","0","1900","0","12000"}, //100
            {"4500","5450","0","1550","0","11500"}, //105
            {"4500","5300","0","1200","0","11000"}, //110
            {"4500","5100","0","1000","0","10600"}, //115
            {"4500","4900","0","700","0","10100"}, //120
            {"4500","4900","0","300","0","9700"}, //125
            {"4500","4800","0","0","0","9300"}, //130
            {"4500","4400","0","0","0","8900"}, //135
            {"4500","4100","0","0","0","8600"}, //140
            {"4200","4100","0","0","0","8300"}, //145
            {"4000","3900","0","200","0","8100"}, //150
            {"3700","3900","0","300","0","7900"}, //155
            {"3400","3900","0","400","0","7700"}, //160
            {"3400","3900","0","100","0","7400"}, //165
            {"3400","3700","0","0","0","7100"}, //170
            {"3400","3450","0","0","0","6850"}, //175
            {"3400","3200","0","0","0","6600"}, //180
            {"3700","3200","0","0","0","6400"}, //185
            {"4100","3200","0","0","0","6250"}, //190
            {"4100","3200","0","0","0","6100"}, //195
            {"4100","3200","0","0","0","6000"}, //200
            {"4100","3200","0","0","0","5700"}, //210
            {"4100","3200","0","0","0","5450"}, //220
            {"3700","3200","0","0","0","5200"}, //230
            {"3700","3200","0","0","0","5000"}, //240
            {"3400","3200","0","0","0","4800"}, //250
            {"3400","3200","0","0","0","4600"} //260
		};
		if( uHR <= 30 )
		{
			for (int nStep = 0; nStep < 6; ++nStep)
			{
				pParams[nStep] = strUnifocalPVC_Params[0][nStep];
			}
			//时间单位为0.1毫秒；周期时间为50的倍数
			int nCycleTime = ((600000 / uHR) / 50) * 50;
			int nRightExtendTime = nCycleTime - 4800 - 11400;
			pParams[3] = boost::lexical_cast<std::string>(nRightExtendTime);
			pParams[5] = boost::lexical_cast<std::string>(nCycleTime);
		}
		else if( uHR > 100 && uHR <= 200 )
		{
			int iHRStep = ((uHR / 5) * 5 - 100)/5 + 2;
			for( int n = 0; n < 6; ++n )
			{
				pParams[n] = strUnifocalPVC_Params[iHRStep][n];
			}
		}
		else if( uHR > 200 )
		{
			int iHRStep = ((uHR / 10) * 10 - 200)/10 + 22;
			for( int n = 0; n < 6; ++n )
			{
				pParams[n] = strUnifocalPVC_Params[iHRStep][n];
			}
		}
		else if( uHR <= 100 )
		{
			//各数值的含义：早波段时间；向左延伸时间；向左延伸值；向右延伸时间；向右延伸值；周期时间
			static std::string strUnifocalPVC_RangeParams[][6] = {
                {"4800","11400","0","3150","0","19350"}, //31
                {"4800","11150","0","2800","0","18750"}, //32
                {"4800","10750","0","2600","0","18150"}, //33
                {"4800","10250","0","2600","0","17650"}, //34
                {"4800","9950","0","2400","0","17150"}, //35
                {"4800","9450","0","2400","0","16650"}, //36
                {"4800","9000","0","2400","0","16200"}, //37
                {"4800","8600","0","2400","0","15800"}, //38
                {"4800","8200","0","2400","0","15400"}, //39
                {"4700","7900","0","2400","0","15000"}, //40
                {"4700","7900","0","2050","0","14650"}, //41
                {"4700","7900","0","1700","0","14300"}, //42
                {"4700","7900","0","1350","0","13950"}, //43
                {"4700","7900","0","1050","0","13650"}, //44
                {"4700","7800","0","900","0","13300"}, //45
                {"4700","7800","0","650","0","13050"}, //46
                {"4700","7500","0","650","0","12750"}, //47
                {"4700","7500","0","400","0","12500"}, //48
                {"4700","7500","0","150","0","12250"}, //49
                {"4550","7500","0","0","0","12000"},     //50
                {"4550","7250","0","0","0","11750"},     //51
                {"4500","7100","0","0","0","11550"},     //52
                {"4700","7150","0","10750","0","22600"},  //53
                {"4700","7150","0","10350","0","22200"},  //54
                {"4800","7150","0","9850","0","21800"},  //55
                {"4800","7150","0","9450","0","21400"},  //56
                {"4800","7150","0","9050","0","21000"},  //57
                {"4800","7150","0","8750","0","20700"},  //58
                {"4800","7150","0","8350","0","20300"},  //59
                {"4800","7150","0","8050","0","20000"}, //60
                {"4800","7150","0","7650","0","19600"}, //61
                {"4800","7150","0","7350","0","19300"}, //62
                {"4800","7150","0","7050","0","19000"}, //63
                {"4800","6900","0","7000","0","18700"}, //64
                {"4800","6900","0","6800","0","18500"}, //65
                {"4800","6900","0","6500","0","18200"}, //66
                {"4800","6900","0","6200","0","17900"}, //67
                {"4800","6600","0","6200","0","17600"}, //68
                {"4700","6500","0","6200","0","17400"}, //69
                {"4500","6500","0","6200","0","17200"}, //70
                {"4500","6500","0","5900","0","16900"}, //71
                {"4500","6500","0","5700","0","16700"}, //72
                {"4500","6500","0","5400","0","16400"}, //73
                {"4500","6500","0","5200","0","16200"}, //74
                {"4500","6500","0","5000","0","16000"}, //75
                {"4500","6500","0","4800","0","15800"}, //76
                {"4500","6500","0","4600","0","15600"}, //77
                {"4500","6300","0","4600","0","15400"}, //78
                {"4500","6100","0","4600","0","15200"}, //79
                {"4500","5900","0","4600","0","15000"}, //80
                {"4500","5700","0","4600","0","14800"}, //81
                {"4500","5700","0","3000","0","13200"}, //90
                {"4500","5600","0","1900","0","12000"} //100
			};
			if( uHR <= 81 )
			{
				int iHRStep = uHR - 31;
				for( int n = 0; n < 6; ++n )
				{
					pParams[n] = strUnifocalPVC_RangeParams[iHRStep][n];
				}
			}
			else
			{
				for (int nStep = 0; nStep < 6; ++nStep)
				{
					pParams[nStep] = strUnifocalPVC_RangeParams[50][nStep];
				}
				//时间单位为0.1毫秒；周期时间为50的倍数
				int nCycleTime = ((1200000 / uHR) / 50) * 50;
				int nRightExtendTime = nCycleTime - 4500 - 5700;
				pParams[3] = boost::lexical_cast<std::string>(nRightExtendTime);
				pParams[5] = boost::lexical_cast<std::string>(nCycleTime);
			}
		}
	}

	//获取室性早搏RonT段参数
    void CCardiogramSinusParam_I12::GetRonT_Params(/*out*/std::string *pParams, int uHR)
	{
		//各数值的含义：早波段时间；向左延伸时间；向左延伸值；向右延伸时间；向右延伸值；周期时间
		static std::string strPVC_RonT_Params[][6] = {
            {"4800","4500","0","20700","0","30000"},//20
            {"4800","4500","0","10700","0","20000"}, //30
            {"4800","4500","0","5700","0","15000"}, //40
            {"4800","4500","0","2700","0","12000"}, //50
            {"4800","4500","0","700","0","10000"}, //60
            {"4800","4500","0","0","0","9250"},    //65
            {"4800","4500","0","0","0","8500"}, //70
            {"4800","4500","0","0","0","7500"}, //80
            {"4800","4500","0","3900","0","13200"}, //90
            {"4800","4500","0","2700","0","12000"}, //100
            {"4600","4500","0","2400","0","11500"}, //105
            {"4500","4500","0","2000","0","11000"}, //110
            {"4500","4500","0","1600","0","10600"}, //115
            {"4500","4500","0","1100","0","10100"}, //120
            {"4200","4500","0","900","0","9700"}, //125
            {"4000","4500","0","800","0","9300"}, //130
            {"3800","4500","0","600","0","8900"}, //135
            {"3600","4500","0","500","0","8600"}, //140
            {"3600","4000","0","700","0","8300"}, //145
            {"3500","3700","0","900","0","8100"}, //150
            {"3400","3400","0","1100","0","7900"}, //155
            {"3400","3100","0","1200","0","7700"}, //160
            {"3400","3100","0","900","0","7400"}, //165
            {"3400","3100","0","600","0","7100"}, //170
            {"3200","3100","0","550","0","6850"}, //175
            {"3200","3100","0","300","0","6600"}, //180
            {"3200","3100","0","100","0","6400"}, //185
            {"3200","3200","0","0","0","6250"}, //190
            {"3200","3200","0","0","0","6100"}, //195
            {"3200","3200","0","0","0","6000"}, //200
            {"3200","3200","0","0","0","5700"}, //210
            {"3200","3200","0","0","0","5450"}, //220
            {"3200","3100","0","0","0","5200"}, //230
            {"3200","3100","0","0","0","5000"}, //240
            {"3200","3100","0","0","0","4800"}, //250
            {"3200","3100","0","0","0","4600"}  //260
		};
		if( uHR <= 64 )
		{
			for (int nStep = 0; nStep < 6; ++nStep)
			{
				pParams[nStep] = strPVC_RonT_Params[0][nStep];
			}
			//时间单位为0.1毫秒；周期时间为50的倍数
			int nCycleTime = ((600000 / uHR) / 50) * 50;
			pParams[5] = boost::lexical_cast<std::string>(nCycleTime);
			int nRightExtendTime = nCycleTime - 3200 - 3000;
			if( nRightExtendTime < 0 )
				nRightExtendTime = 0;
			pParams[3] = boost::lexical_cast<std::string>(nRightExtendTime);
		}
		else if( uHR <= 80 )
		{
			for (int nStep = 0; nStep < 6; ++nStep)
			{
				pParams[nStep] = strPVC_RonT_Params[5][nStep];
			}
			//时间单位为0.1毫秒；周期时间为50的倍数
			int nCycleTime = ((600000 / uHR) / 50) * 50;
			pParams[5] = boost::lexical_cast<std::string>(nCycleTime);
		}
		else if( uHR <= 100 )
		{
			for (int nStep = 0; nStep < 6; ++nStep)
			{
				pParams[nStep] = strPVC_RonT_Params[8][nStep];
			}
			//时间单位为0.1毫秒；周期时间为50的倍数
			int nCycleTime = ((1200000 / uHR) / 50) * 50;
			pParams[5] = boost::lexical_cast<std::string>(nCycleTime);
			int nRightExtendTime = nCycleTime - 3200 - 3000;
			if( nRightExtendTime < 0 )
				nRightExtendTime = 0;
			pParams[3] = boost::lexical_cast<std::string>(nRightExtendTime);
		}
		else if( uHR <= 200 )
		{
			int iHRStep = ((uHR / 5) * 5 - 100)/5 + 9;
			for( int n = 0; n < 6; ++n )
			{
				pParams[n] = strPVC_RonT_Params[iHRStep][n];
			}
		}
		else
		{
			int iHRStep = ((uHR / 10) * 10 - 200)/10 + 29;
			for( int n = 0; n < 6; ++n )
			{
				pParams[n] = strPVC_RonT_Params[iHRStep][n];
			}
		}
	}

	//获取性早搏显二联律参数
    void CCardiogramSinusParam_I12::GetCoupled_PVC_Params(/*out*/std::string *pParams, int uHR)
	{
		//各数值的含义：早波段时间；向左延伸时间；向左延伸值；向右延伸时间；向右延伸值；周期时间
		static std::string strCoupled_PVC_Params[][6] = {
            {"9750","11400","0","8850","0","30000"},//20
            {"9750","11400","0","7400","0","28550"},//21
            {"9750","11400","0","6100","0","27250"},//22
            {"9750","11400","0","4950","0","26100"},//23
            {"9750","11400","0","3850","0","25000"},//24
            {"9750","11400","0","2850","0","24000"},//25
            {"9750","11400","0","1950","0","23100"},//26
            {"9750","11000","0","1450","0","22200"},//27
            {"9750","10700","0","950","0","21400"},//28
            {"9750","10400","0","550","0","20700"},//29
            {"9750","10000","0","250","0","20000"}, //30
            {"9750","9600","0","0","0","19350"}, //31
            {"9750","9000","0","250","0","18750"}, //32
            {"9750","8400","0","250","0","18150"}, //33
            {"9750","7900","0","0","0","17650"}, //34
            {"9750","8000","0","16550","0","34300"}, //35
            {"9750","8000","0","15550","0","33300"}, //36
            {"9750","8000","0","14650","0","32400"}, //37
            {"9750","8000","0","13850","0","31600"}, //38
            {"9750","8000","0","13050","0","30800"}, //39
            {"9750","8000","0","12250","0","30000"}, //40
            {"9750","8000","0","10850","0","29300"}, //41
            {"9750","8000","0","10850","0","28600"}, //42
            {"9750","8000","0","10150","0","27900"}, //43
            {"9750","8000","0","9550","0","27300"}, //44
            {"9750","8000","0","8850","0","26600"}, //45
            {"9750","8000","0","8350","0","26100"}, //46
            {"9750","8000","0","7750","0","25500"}, //47
            {"9750","7800","0","7450","0","25000"}, //48
            {"9750","7800","0","6950","0","24500"}, //49
            {"9750","7500","0","6750","0","24000"}, //50
            {"9750","7500","0","6250","0","23500"}, //51
            {"9750","7500","0","5850","0","23100"}, //52
            {"9750","7500","0","5350","0","22600"}, //53
            {"9750","7500","0","4950","0","22200"}, //54
            {"9750","7500","0","4550","0","21800"}, //55
            {"9750","7500","0","4150","0","21400"}, //56
            {"9750","7500","0","3750","0","21000"}, //57
            {"9750","7500","0","3450","0","20700"}, //58
            {"9750","7300","0","3250","0","20300"}, //59
            {"9750","7000","0","3250","0","20000"}, //60
            {"9750","7000","0","2850","0","19600"}, //61
            {"9750","7000","0","2550","0","19300"}, //62
            {"9750","7000","0","2250","0","19000"}, //63
            {"9750","7000","0","1950","0","18700"}, //64
            {"9750","7000","0","1750","0","18500"}, //65
            {"9750","7000","0","1450","0","18200"}, //66
            {"9750","7000","0","1150","0","17900"}, //67
            {"9750","7000","0","850","0","17600"}, //68
            {"9750","6900","0","750","0","17400"}, //69
            {"9750","6500","0","750","0","17000"}, //70
            {"9750","6500","0","650","0","16900"}, //71
            {"9750","6500","0","450","0","16700"}, //72
            {"9750","6300","0","350","0","16400"}, //73
            {"9750","6300","0","150","0","16200"}, //74
            {"9750","6150","0","100","0","16000"}, //75
            {"9600","6100","0","100","0","15800"}, //76
            {"9500","6000","0","100","0","15600"}, //77
            {"9300","6000","0","100","0","15400"}, //78
            {"9100","6000","0","100","0","15200"}, //79
            {"9000","6000","0","100","0","15100"}, //80
            {"9000","5800","0","0","0","14800"}, //81
            {"9000","5800","0","0","0","14600"}, //82
            {"9000","5800","0","0","0","14400"}, //83
            {"9000","5800","0","0","0","14300"}, //84
            {"9000","5800","0","0","0","14100"}, //85
            {"9000","5800","0","0","0","13900"}, //86
            {"9000","5800","0","0","0","13800"}, //87
            {"9000","5800","0","0","0","13600"}, //88
            {"9000","5800","0","0","0","13500"}, //89
            {"9000","5800","0","0","0","13200"}, //90
            {"9000","5800","0","0","0","13200"}, //91
            {"9000","5600","0","0","0","13000"}, //92
            {"9000","5600","0","4750","0","19350"}, //93
            {"9000","5600","0","4600","0","19200"}, //94
            {"9000","5600","0","4300","0","18900"}, //95
            {"9000","5600","0","4150","0","18750"}, //96
            {"9000","5600","0","4000","0","18600"}, //97
            {"9000","5600","0","3700","0","18300"}, //98
            {"9000","5600","0","3550","0","18150"}, //99
            {"9000","5600","0","3400","0","18000"}, //100
            {"9000","5600","0","2600","0","17100"}, //105
            {"9000","5400","0","2100","0","16500"}, //110
            {"9000","5100","0","1500","0","15600"}, //115
            {"9000","4900","0","1250","0","15150"}, //120
            {"9000","4900","0","500","0","14400"}, //125
            {"9000","4500","0","300","0","13800"}, //130
            {"9000","4350","0","0","0","13350"}, //135
            {"9000","4200","0","0","0","12900"}, //140
            {"8100","4000","0","300","0","12400"}, //145
            {"7500","3800","0","700","0","12000"}, //150
            {"6900","3800","0","1000","0","11700"}, //155
            {"6500","3800","0","1250","0","11550"}, //160
            {"6500","3800","0","600","0","10900"}, //165
            {"6800","3700","0","0","0","10500"}, //170
            {"6800","3400","0","0","0","10200"}, //175
            {"6800","3400","0","0","0","9900"}, //180
            {"6800","3400","0","0","0","9750"}, //185
            {"6800","3200","0","0","0","9450"}, //190
            {"6800","3200","0","0","0","9200"}, //195
            {"6800","3200","0","0","0","9000"}, //200
            {"6800","3200","0","0","0","8550"}, //210
            {"6500","3200","0","0","0","8150"}, //220
            {"6500","3200","0","0","0","7800"}, //230
            {"6500","3200","0","0","0","7500"}, //240
            {"6500","3200","0","0","0","7200"}, //250
            {"6500","3200","0","0","0","6900"}  //260
		};
		if( uHR <= 100 )
		{
			for (int nStep = 0; nStep < 6; ++nStep)
			{
				pParams[nStep] = strCoupled_PVC_Params[uHR-20][nStep];
			}
		}
		else if( uHR <= 200 )
		{
			int iHRStep = ((uHR / 5) * 5 - 100)/5 + 80;
			for( int n = 0; n < 6; ++n )
			{
				pParams[n] = strCoupled_PVC_Params[iHRStep][n];
			}
		}
		else
		{
			int iHRStep = ((uHR / 10) * 10 - 200)/10 + 100;
			for( int n = 0; n < 6; ++n )
			{
				pParams[n] = strCoupled_PVC_Params[iHRStep][n];
			}
		}
	}

	//获取房性早搏参数
    void CCardiogramSinusParam_I12::GetPAC_Params(/*out*/std::string *pParams, int uHR)
	{
		//各数值的含义：早波段时间；向左延伸时间；向左延伸值；向右延伸时间；向右延伸值；周期时间；
		static std::string strPAC_Params[][7] = {
            {"-1","20000","0","27400","0","53000"},//20HR
            {"-1","18800","0","26100","0","50500"},//21HR
            {"-1","17600","0","24800","0","48000"},//22HR
            {"-1","16400","0","23500","0","45500"},//23HR
            {"-1","15200","0","22200","0","43000"},//24HR
            {"-1","14200","0","21200","0","41000"},//25HR
            {"-1","13200","0","20200","0","39000"},//26HR
            {"-1","12400","0","19000","0","37000"},//27HR
            {"-1","11600","0","18300","0","35500"},//28HR
            {"-1","10800","0","17600","0","34000"},//29HR
            {"-1","10000","0","16900","0","32500"},//30HR
            {"-1","9600","0","16100","0","31300"},//31HR
            {"-1","9200","0","15800","0","30600"},//32HR
            {"-1","9000","0","15200","0","29800"},//33HR
            {"-1","9000","0","14600","0","29200"},//34HR
            {"-1","9000","0","14000","0","28600"},//35HR
            {"-1","9000","0","13400","0","28000"},//36HR
            {"-1","9000","0","12900","0","27500"},//37HR
            {"-1","9000","0","12400","0","27000"},//38HR
            {"-1","9000","0","11900","0","26500"},//39HR
            {"-1","9000","0","11400","0","26000"},//40HR
            {"-1","8800","0","11100","0","25500"},//41HR
            {"-1","8700","0","10800","0","25100"},//42HR
            {"-1","8600","0","10500","0","24700"},//43HR
            {"-1","8500","0","10200","0","24300"},//44HR
            {"-1","8400","0","10000","0","24000"},//45HR
            {"-1","8300","0","9650","0","23550"},//46HR
            {"-1","8200","0","9300","0","23100"},//47HR
            {"-1","8100","0","9000","0","22700"},//48HR
            {"-1","8000","0","8700","0","22300"},//49HR
            {"-1","8000","0","8200","0","21800"},//50HR
            {"-1","7850","0","8000","0","21450"},//51HR
            {"-1","7700","0","7800","0","21100"},//52HR
            {"-1","7600","0","7550","0","20750"},//53HR
            {"-1","7500","0","7300","0","20400"},//54HR
            {"-1","7400","0","7100","0","20100"},//55HR
            {"-1","7300","0","6900","0","19800"},//56HR
            {"-1","7200","0","6700","0","19500"},//57HR
            {"-1","7100","0","6500","0","19200"},//58HR
            {"-1","7000","0","6300","0","18900"},//59HR
            {"-1","7000","0","6000","0","18600"},//60HR
            {"-1","6800","0","5900","0","18300"},//61HR
            {"-1","6500","0","5900","0","18000"},//62HR
            {"-1","6400","0","5700","0","17700"},//63HR
            {"-1","6300","0","5400","0","17300"},//64HR
            {"-1","6200","0","5200","0","17000"},//65HR
            {"-1","6100","0","5100","0","16800"},//66HR
            {"-1","6000","0","5000","0","16600"},//67HR
            {"-1","6000","0","4800","0","16400"},//68HR
            {"-1","6000","0","4600","0","16200"},//69HR
            {"-1","6000","0","4300","0","15900"},//70HR
            {"-1","5800","0","4200","0","15600"},//71HR
            {"-1","5600","0","4100","0","15300"},//72HR
            {"-1","5400","0","4000","0","15000"},//73HR
            {"-1","5300","0","3900","0","14800"},//74HR
            {"-1","5200","0","3800","0","14600"},//75HR
            {"-1","5100","0","3700","0","14400"},//76HR
            {"-1","5000","0","3600","0","14200"},//77HR
            {"-1","5000","0","3400","0","14000"},//78HR
            {"-1","5000","0","3300","0","13900"},//79HR
            {"-1","5000","0","3200","0","13800"},//80HR
            {"-1","4800","0","3200","0","13600"},//81HR
            {"-1","4700","0","3100","0","13400"},//82HR
            {"-1","4600","0","3000","0","13200"},//83HR
            {"-1","4500","0","2900","0","13000"},//84HR
            {"-1","4500","0","2800","0","12900"},//85HR
            {"-1","4500","0","2700","0","12800"},//86HR
            {"-1","4500","0","2600","0","12700"},//87HR
            {"-1","4500","0","2500","0","12600"},//88HR
            {"-1","4500","0","2400","0","12500"},//89HR
            {"-1","4500","0","2200","0","12300"},//90HR
            {"-1","4300","0","2100","0","12000"},//91HR
            {"-1","4200","0","1900","0","11700"},//92HR
            {"-1","4100","0","1800","0","11400"},//93HR
            {"-1","4000","0","1700","0","11100"},//94HR
            {"-1","4000","0","1600","0","10900"},//95HR
            {"-1","4000","0","1500","0","10700"},//96HR
            {"-1","4000","0","1400","0","10500"},//97HR
            {"-1","4000","0","1400","0","10400"},//98HR
            {"-1","4000","0","1400","0","10200"},//99HR
            {"-1","4000","0","1400","0","10000"},//100HR
            {"-1","4000","0","1300","0","9900"},//105HR
            {"-1","3900","0","300","0","9800"},//110HR
            {"5400","3600","0","600","0","9600"},//115HR
            {"4700","3500","0","1200","0","9400"},//120HR
            {"4600","3400","0","900","0","8900"},//125HR
            {"4600","3200","0","700","0","8500"},//130HR
            {"4500","3100","0","600","0","8200"},//135HR
            {"4400","3000","0","500","0","7900"},//140HR
            {"4300","3000","0","500","0","7800"},//145HR
            {"4250","3000","0","400","0","7650"},//150HR
            {"4100","3000","0","400","0","7500"},//155HR
            {"4000","3000","0","400","0","7400"},//160HR
            {"4000","3000","0","100","0","7100"},//165HR
            {"4000","2850","0","0","0","6850"},//170HR
            {"4000","2700","0","0","0","6650"},//175HR
            {"3900","2700","0","0","0","6500"},//180HR
            {"3900","2700","0","0","0","6400"},//185HR
            {"4000","2700","0","0","0","6325"},//190HR
            {"4000","2700","0","0","0","6250"},//195HR
            {"4000","2700","0","0","0","6200"}, //200HR
            {"4000","2700","0","0","0","5900"}, //210HR
            {"4000","2700","0","0","0","5600"}, //220HR
            {"3900","2700","0","0","0","5400"}, //230HR
            {"3900","2700","0","0","0","5150"}, //240HR
            {"3900","2700","0","0","0","4950"}, //250HR
            {"3900","2700","0","0","0","4750"}  //260HR
		};
		if( uHR <= 100 )
		{
			for (int nStep = 0; nStep < 6; ++nStep)
			{
				pParams[nStep] = strPAC_Params[uHR-20][nStep];
			}
		}
		else if( uHR <= 200 )
		{
			int iHRStep = ((uHR / 5) * 5 - 100)/5 + 80;
			for( int n = 0; n < 6; ++n )
			{
				pParams[n] = strPAC_Params[iHRStep][n];
			}
		}
		else
		{
			int iHRStep = ((uHR / 10) * 10 - 200)/10 + 100;
			for( int n = 0; n < 6; ++n )
			{
				pParams[n] = strPAC_Params[iHRStep][n];
			}
		}
	}

	//获取PJC参数
    void CCardiogramSinusParam_I12::GetPJC_Params(/*out*/std::string *pParams, int uHR)
	{
		//各数值的含义：早波段时间；向左延伸时间；向左延伸值；向右延伸时间；向右延伸值；周期时间；
		static std::string strPAC_Params[][7] = {
            {"-1","21500","0","27400","0","53000"},//20HR
            {"-1","20300","0","26100","0","50500"},//21HR
            {"-1","19100","0","24800","0","48000"},//22HR
            {"-1","17900","0","23500","0","45500"},//23HR
            {"-1","16700","0","22200","0","43000"},//24HR
            {"-1","15700","0","21200","0","41000"},//25HR
            {"-1","14700","0","20200","0","39000"},//26HR
            {"-1","13900","0","19000","0","37000"},//27HR
            {"-1","13100","0","18300","0","35500"},//28HR
            {"-1","12300","0","17600","0","34000"},//29HR
            {"-1","11500","0","16900","0","32500"},//30HR
            {"-1","11100","0","16100","0","31300"},//31HR
            {"-1","10700","0","15800","0","30600"},//32HR
            {"-1","10500","0","15200","0","29800"},//33HR
            {"-1","10500","0","14600","0","29200"},//34HR
            {"-1","10500","0","14000","0","28600"},//35HR
            {"-1","10500","0","13400","0","28000"},//36HR
            {"-1","10500","0","12900","0","27500"},//37HR
            {"-1","10500","0","12400","0","27000"},//38HR
            {"-1","10500","0","11900","0","26500"},//39HR
            {"-1","10500","0","11400","0","26000"},//40HR
            {"-1","10300","0","11100","0","25500"},//41HR
            {"-1","10200","0","10800","0","25100"},//42HR
            {"-1","10100","0","10500","0","24700"},//43HR
            {"-1","10000","0","10200","0","24300"},//44HR
            {"-1","9900","0","10000","0","24000"},//45HR
            {"-1","9800","0","9650","0","23550"},//46HR
            {"-1","9700","0","9300","0","23100"},//47HR
            {"-1","9600","0","9000","0","22700"},//48HR
            {"-1","9500","0","8700","0","22300"},//49HR
            {"-1","9500","0","8200","0","21800"},//50HR
            {"-1","9350","0","8000","0","21450"},//51HR
            {"-1","9200","0","7800","0","21100"},//52HR
            {"-1","9100","0","7550","0","20750"},//53HR
            {"-1","9000","0","7300","0","20400"},//54HR
            {"-1","8900","0","7100","0","20100"},//55HR
            {"-1","8800","0","6900","0","19800"},//56HR
            {"-1","8700","0","6700","0","19500"},//57HR
            {"-1","8600","0","6500","0","19200"},//58HR
            {"-1","8500","0","6300","0","18900"},//59HR
            {"-1","8500","0","6000","0","18600"},//60HR
            {"-1","8300","0","5900","0","18300"},//61HR
            {"-1","8000","0","5900","0","18000"},//62HR
            {"-1","7900","0","5700","0","17700"},//63HR
            {"-1","7800","0","5400","0","17300"},//64HR
            {"-1","7700","0","5200","0","17000"},//65HR
            {"-1","7600","0","5100","0","16800"},//66HR
            {"-1","6000","0","5000","0","16600"},//67HR
            {"-1","6000","0","4800","0","16400"},//68HR
            {"-1","6000","0","4600","0","16200"},//69HR
            {"-1","7500","0","4300","0","15900"},//70HR
            {"-1","7300","0","4200","0","15600"},//71HR
            {"-1","7200","0","4100","0","15300"},//72HR
            {"-1","6900","0","4000","0","15000"},//73HR
            {"-1","6800","0","3900","0","14800"},//74HR
            {"-1","6700","0","3800","0","14600"},//75HR
            {"-1","6600","0","3700","0","14400"},//76HR
            {"-1","6500","0","3600","0","14200"},//77HR
            {"-1","6500","0","3400","0","14000"},//78HR
            {"-1","6500","0","3300","0","13900"},//79HR
            {"-1","6500","0","3200","0","13800"},//80HR
            {"-1","6300","0","3200","0","13600"},//81HR
            {"-1","6200","0","3100","0","13400"},//82HR
            {"-1","6100","0","3000","0","13200"},//83HR
            {"-1","6000","0","2900","0","13000"},//84HR
            {"-1","6000","0","2800","0","12900"},//85HR
            {"-1","6000","0","2700","0","12800"},//86HR
            {"-1","6000","0","2600","0","12700"},//87HR
            {"-1","6000","0","2500","0","12600"},//88HR
            {"-1","6000","0","2400","0","12500"},//89HR
            {"-1","6000","0","2200","0","12300"},//90HR
            {"-1","5800","0","2100","0","12000"},//91HR
            {"-1","5700","0","1900","0","11700"},//92HR
            {"-1","5600","0","1800","0","11400"},//93HR
            {"-1","5500","0","1700","0","11100"},//94HR
            {"-1","5500","0","1600","0","10900"},//95HR
            {"-1","5500","0","1500","0","10700"},//96HR
            {"-1","5500","0","1400","0","10500"},//97HR
            {"-1","5500","0","1400","0","10400"},//98HR
            {"-1","5500","0","1400","0","10200"},//99HR
            {"-1","5500","0","1400","0","10000"},//100HR
            {"-1","5500","0","1300","0","9900"},//105HR
            {"-1","5300","0","1200","0","9800"},//110HR
            {"-1","5200","0","1200","0","9600"},//115HR
            {"-1","5000","0","1200","0","9400"},//120HR
            {"-1","5000","0","900","0","8900"},//125HR
            {"-1","5000","0","700","0","8500"},//130HR
            {"-1","5000","0","500","0","8200"},//135HR
            {"-1","4500","0","400","0","7900"},//140HR
            {"-1","4400","0","400","0","7800"},//145HR
            {"-1","4300","0","400","0","7650"},//150HR
            {"-1","4200","0","400","0","7500"},//155HR
            {"-1","4200","0","400","0","7400"},//160HR
            {"-1","4200","0","200","0","7100"},//165HR
            {"-1","4000","0","100","0","6850"},//170HR
            {"-1","3800","0","0","0","6650"},//175HR
            {"-1","3800","0","0","0","6500"},//180HR
            {"-1","3800","0","0","0","6400"},//185HR
            {"-1","3800","0","0","0","6325"},//190HR
            {"-1","3800","0","0","0","6250"},//195HR
            {"-1","3800","0","0","0","6200"}, //200HR
            {"-1","3800","0","0","0","5900"}, //210HR
            {"-1","3800","0","0","0","5600"}, //220HR
            {"-1","3800","0","0","0","5400"}, //230HR
            {"-1","3800","0","0","0","5150"}, //240HR
            {"-1","3800","0","0","0","4950"}, //250HR
            {"-1","3800","0","0","0","4750"}  //260HR
		};
		if( uHR <= 100 )
		{
			for (int nStep = 0; nStep < 6; ++nStep)
			{
				pParams[nStep] = strPAC_Params[uHR-20][nStep];
			}
		}
		else if( uHR <= 200 )
		{
			int iHRStep = ((uHR / 5) * 5 - 100)/5 + 80;
			for( int n = 0; n < 6; ++n )
			{
				pParams[n] = strPAC_Params[iHRStep][n];
			}
		}
		else
		{
			int iHRStep = ((uHR / 10) * 10 - 200)/10 + 100;
			for( int n = 0; n < 6; ++n )
			{
				pParams[n] = strPAC_Params[iHRStep][n];
			}
		}
	}

	void CCardiogramSinusParam_I12::LoadExtrasystParam(Extrasys eExtrasyst)
	{
		//设置下次创建周期数据时的操作范围
		m_eRefurbishDataRange = RD_MainSegmentData;
		std::string   strAimParam[6];
		switch(eExtrasyst)
		{
		case ES_None:
		case Unifocal_PVC:  //单形性室性早搏
		case Multifocal_PVC://多形性室性早搏
			{
				GetUnifocalPVC_Params(/*out*/strAimParam, m_uHR);
				break;
			}
		case PVC_RonT://室性早搏RonT
			{
				GetRonT_Params(/*out*/strAimParam, m_uHR);
				break;
			}
		case Coupled_PVC://室性早搏显二联律
			{
				GetCoupled_PVC_Params(/*out*/strAimParam, m_uHR);
				break;
			}
		case PAC://房性早搏
			{
				m_eRefurbishDataRange = RD_AllData;//重新加载所有的数据

				GetPAC_Params(/*out*/strAimParam, m_uHR);
				m_setParams["P_FileName"] = "P_2.txt";
				break;
			}
		case PJC:
			{
				m_eRefurbishDataRange = RD_AllData;//重新加载所有的数据

				GetPJC_Params(/*out*/strAimParam, m_uHR);
				m_setParams["P_FileName"] = "Empty_Data.txt";
				m_setParams["P_ZoomTime"] = "0";
				m_setParams["P_ExtendTime"] = "0";
				break;
			}
		}
		m_setParams["ES_Time"] = strAimParam[0];//早波段时间
		m_setParams["ES_LExtentTime"] = strAimParam[1];//向左延伸时间
		m_setParams["ES_LExtentValue"] = strAimParam[2];//向左延伸值
		m_setParams["ES_RExtentTime"] = strAimParam[3];//向右延伸时间
		m_setParams["ES_RExtentValue"] = strAimParam[4];//向右延伸值
		m_setParams["ES_OverlapTime"] = "0";//覆盖区域时间点
		m_setParams["CycleTime"] = strAimParam[5];//周期时间
	}

	std::string CCardiogramSinusParam_I12::GetExtrasystFileName(Extrasys eExtrasyst,const std::string &strKey)
	{
		std::string  strExtrasystFileName;
		switch(eExtrasyst)
		{
		case ES_None:
		case Unifocal_PVC:
		case PVC_RonT:
		case Multifocal_PVC:
			{
				strExtrasystFileName = "Unifocal_PVC_A.txt";
				break;
			}
		case Coupled_PVC:
			{
				strExtrasystFileName = "Coupled_PVC_A.txt";
				break;
			}
		case PAC:
		case PJC:
			{
				break;
			}
		}
		return strExtrasystFileName;
	}

	//产生心电时，血氧的启动时间
	bool CCardiogramSinusParam_I12::GetSpO2BeginTimeToCardiogram(/*out*/long &lBeginTime, /*out*/long &lCycleTime)
	{
		lBeginTime = 0;
		std::string strKey, strValue;
		strKey = "P_ZoomTime";
		if( GetParamValue(strKey, strValue) )
		{
			lBeginTime += boost::lexical_cast<long>(strValue);
		}
		else
		{
            BOOST_ASSERT(0);
			return false;
		}
        strKey = "P_ExtendTime";
		if( GetParamValue(strKey, strValue) )
		{
			lBeginTime += boost::lexical_cast<long>(strValue);
		}
		else
		{
            BOOST_ASSERT(0);
			return false;
		}
        strKey = "R_ZoomTime";
		if( GetParamValue(strKey, strValue) )
		{
			lBeginTime += boost::lexical_cast<long>(strValue);
		}
		else
		{
            BOOST_ASSERT(0);
			return false;
		}
		lCycleTime = (long)GetCycleTime();
		return true;
	}

	//产生早博时，血氧的启动时间
	bool CCardiogramSinusParam_I12::GetSpO2BeginTimeToExtrasyst(/*out*/long &lBeginTime, /*out*/long &lPreSpO2BeginTime, /*out*/long &lCycleTime)
	{
		lBeginTime = 0;
		std::string strKey, strValue;
        strKey = "ES_Time";
		if( GetParamValue(strKey, /*out*/strValue) )
		{
			lBeginTime = boost::lexical_cast<long>(strValue);
			lBeginTime = lBeginTime/3;
		}
		else
		{
            BOOST_ASSERT(0);
			return false;
		}
        strKey = "ES_LExtentTime";
		if( GetParamValue(strKey, /*out*/strValue) )
		{
			lBeginTime += boost::lexical_cast<long>(strValue);
		}
		else
		{
            BOOST_ASSERT(0);
			return false;
		}
		return GetSpO2BeginTimeToCardiogram(/*out*/lPreSpO2BeginTime, /*out*/lCycleTime);
	}

}}}
